// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class AdminclasificaunbugTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() throws MalformedURLException {
    driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.chrome());
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void adminclasificaunbug() {
    // Test name: admin clasifica un bug
    // Step # | name | target | value
    // 1 | open | /login | 
    driver.get("http://localhost:4200/login");
    // 2 | setWindowSize | 1920x1040 | 
    driver.manage().window().setSize(new Dimension(1920, 1040));
    // 3 | click | css=.mat-flat-button > .mat-button-wrapper | 
    driver.findElement(By.cssSelector(".mat-flat-button > .mat-button-wrapper")).click();
    // 4 | click | css=.cdk-focused | 
    driver.findElement(By.cssSelector(".cdk-focused")).click();
    // 5 | click | id=mat-input-2 | 
    driver.findElement(By.id("mat-input-2")).click();
    // 6 | type | id=mat-input-2 | fake name
    driver.findElement(By.id("mat-input-2")).sendKeys("fake name");
    // 7 | type | id=mat-input-3 | fake description
    driver.findElement(By.id("mat-input-3")).sendKeys("fake description");
    // 8 | type | id=mat-input-4 | fake comment
    driver.findElement(By.id("mat-input-4")).sendKeys("fake comment");
    // 9 | click | css=.ng-tns-c83-6 > .mat-form-field-infix | 
    driver.findElement(By.cssSelector(".ng-tns-c83-6 > .mat-form-field-infix")).click();
    // 10 | click | css=#mat-option-2 > .mat-option-text | 
    driver.findElement(By.cssSelector("#mat-option-2 > .mat-option-text")).click();
    // 11 | click | css=#save > .mat-button-wrapper | 
    driver.findElement(By.cssSelector("#save > .mat-button-wrapper")).click();
  }
}
